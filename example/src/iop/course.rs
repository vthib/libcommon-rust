/***** THIS FILE IS AUTOGENERATED DO NOT MODIFY DIRECTLY ! *****/
use serde_iop::{Deserialize, Serialize};
use serde_repr::{Deserialize_repr, Serialize_repr};

#[derive(PartialEq, Eq, Clone, Serialize_repr, Deserialize_repr)]
#[repr(i32)]
pub enum StdCourseType {
    C = 0,
    PYTHON = 1,
    RUST = 2,
}

#[derive(Clone, Serialize, Deserialize)]
pub enum CourseType {
    Std(StdCourseType),
    CustomId(u32),
}

#[derive(Clone, Serialize, Deserialize)]
pub struct CourseProgress {
    pub r#type: CourseType,
    pub completed_steps: u32,
}

#[derive(Clone, Serialize, Deserialize)]
pub struct User {
    pub id: u64,
    _dummy2: (),
    pub name: String,
    _dummy4: (),
    _dummy5: (),
    pub email: Option<String>,
    pub courses: Vec<CourseProgress>,
    _dummy8: (),
    pub is_admin: bool,
}

pub mod rpcs {
    pub mod user {
        use super::super::*;
        use libcommon_ic;

        #[derive(Clone, Serialize, Deserialize)]
        pub struct CreateArgs {
            pub name: String,
            pub email: Option<String>,
        }
        #[derive(Clone, Serialize, Deserialize)]
        pub struct CreateRes {
            pub id: u64,
        }
        pub type CreateExn = ();
        pub struct Create {}
        impl libcommon_ic::types::Rpc for Create {
            type Input = CreateArgs;
            type Output = CreateRes;
            const TAG: u16 = 1;
            const ASYNC: bool = false;
        }

        #[derive(Clone, Serialize, Deserialize)]
        pub struct GetArgs {
            pub id: u64,
        }
        #[derive(Clone, Serialize, Deserialize)]
        pub struct GetRes {
            pub user: User,
        }
        pub type GetExn = ();
        pub struct Get {}
        impl libcommon_ic::types::Rpc for Get {
            type Input = GetArgs;
            type Output = GetRes;
            const TAG: u16 = 2;
            const ASYNC: bool = false;
        }

        #[derive(Clone, Serialize, Deserialize)]
        pub struct SetProgressArgs {
            pub id: u64,
            pub progress: CourseProgress,
        }
        pub type SetProgressRes = ();
        pub type SetProgressExn = ();
        pub struct SetProgress {}
        impl libcommon_ic::types::Rpc for SetProgress {
            type Input = SetProgressArgs;
            type Output = SetProgressRes;
            const TAG: u16 = 3;
            const ASYNC: bool = false;
        }

        #[derive(Clone, Serialize, Deserialize)]
        pub struct GetCompletionRateArgs {
            pub id: u64,
        }
        #[derive(Clone, Serialize, Deserialize)]
        pub struct GetCompletionRateRes {
            pub percent: f64,
        }
        pub type GetCompletionRateExn = ();
        pub struct GetCompletionRate {}
        impl libcommon_ic::types::Rpc for GetCompletionRate {
            type Input = GetCompletionRateArgs;
            type Output = GetCompletionRateRes;
            const TAG: u16 = 4;
            const ASYNC: bool = false;
        }
    }

    pub mod custom {
        use super::super::*;
        use libcommon_ic;

        #[derive(Clone, Serialize, Deserialize)]
        pub struct GetNbTotalStepsArgs {
            pub id: u32,
        }
        #[derive(Clone, Serialize, Deserialize)]
        pub struct GetNbTotalStepsRes {
            pub nb_total_steps: u32,
        }
        pub type GetNbTotalStepsExn = ();
        pub struct GetNbTotalSteps {}
        impl libcommon_ic::types::Rpc for GetNbTotalSteps {
            type Input = GetNbTotalStepsArgs;
            type Output = GetNbTotalStepsRes;
            const TAG: u16 = 1;
            const ASYNC: bool = false;
        }
    }
}

pub mod modules {
    pub mod course {
        pub const USER: u16 = 1;
        pub const CUSTOM: u16 = 2;
    }
}
